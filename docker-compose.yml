version: '3'

services:
  redis:
    image: redis:latest
    restart: on-failure
    env_file:
      - .env
    expose:
      - "6379"

  db:
    image: postgres:latest
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -d $POSTGRES_DB -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
    environment:
#      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  app:
    build: .
    tty: true
    command: sh -c "python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
#    restart: on-failure:5
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: sh -c "sleep 5 && celery -A config worker -l info"
    volumes:
      - .:/app
    restart: unless-stopped       #on-failure
    env_file:
      - .env
    depends_on:
      - app
      - redis
      - db

volumes:
  pg_data:
